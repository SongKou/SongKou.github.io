<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Regex on Council of Elrond</title>
    <link>https://songkou.github.io/tags/regex/</link>
    <description>Recent content in Regex on Council of Elrond</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Oct 2023 23:23:10 +0800</lastBuildDate><atom:link href="https://songkou.github.io/tags/regex/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Smart Way to do Regex</title>
      <link>https://songkou.github.io/posts/smart_way_do_regex/</link>
      <pubDate>Fri, 06 Oct 2023 23:23:10 +0800</pubDate>
      
      <guid>https://songkou.github.io/posts/smart_way_do_regex/</guid>
      <description>Below is a sample code that I found to get complex regex pattern instead of write it manually good example to make smaller parts first the combine to a very complex pattern.
import re # convert the {name} test to rules in predefined format in macros def regex_expand(macros, pattern, guarded = True): output = [] pos = 0 size = len(pattern) while pos &amp;lt; size: ch = pattern[pos] if ch == &amp;#39;\\&amp;#39;: output.</description>
    </item>
    
    <item>
      <title>Python_Regex</title>
      <link>https://songkou.github.io/posts/python_regex/</link>
      <pubDate>Tue, 12 Oct 2021 20:59:46 +0800</pubDate>
      
      <guid>https://songkou.github.io/posts/python_regex/</guid>
      <description>Some Advanced usage on regex get float number: import re target = &amp;#39;total growth is : 8%-8.5%&amp;#39; rate = re.findall(&amp;#39;(\d+(?:\.\d+)?)&amp;#39;, target) print(rate) [&amp;#39;8&amp;#39;, &amp;#39;8.5&amp;#39;] #\d is any int, + is one to many #(?:...) #A non-capturing group allows you to apply quantifiers to part of your regex but does not capture/assign an ID. #so it means: find int or, if int follows a &amp;#34;.&amp;#34; and any int afterwards, combine the int with &amp;#34;.</description>
    </item>
    
  </channel>
</rss>
