<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Council of Elrond</title>
    <link>https://songkou.github.io/categories/python/</link>
    <description>Recent content in Python on Council of Elrond</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Nov 2021 22:08:48 +0800</lastBuildDate><atom:link href="https://songkou.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python_One_line</title>
      <link>https://songkou.github.io/posts/python_one_line/</link>
      <pubDate>Mon, 22 Nov 2021 22:08:48 +0800</pubDate>
      
      <guid>https://songkou.github.io/posts/python_one_line/</guid>
      <description>Tricks to write Python in one line Get dict output value dict_test = {&amp;#34;A&amp;#34;: 100, &amp;#34;B&amp;#34;: 99, &amp;#34;C&amp;#34;: 33, &amp;#34;D&amp;#34;: 120} output = [(key, value) for key, value in dict_test.items() if value &amp;gt;= 100] print(f&amp;#34;the output is ：{output}&amp;#34;) the output is ：[(&amp;#39;A&amp;#39;, 100), (&amp;#39;D&amp;#39;, 120)] type(output) list Filter words that is more than 3 characters in a sentence text = &amp;#39;&amp;#39;&amp;#39;Outside, the moon is shedding its cold light on the cold snow,\nand the white-bearded fir-trees round Camp Villa1 are casting a blue shadow across the white ground, \nwhile the Rev2&amp;#39;&amp;#39;&amp;#39; output = [[x for x in line.</description>
    </item>
    
    <item>
      <title>Python_Regex</title>
      <link>https://songkou.github.io/posts/python_regex/</link>
      <pubDate>Tue, 12 Oct 2021 20:59:46 +0800</pubDate>
      
      <guid>https://songkou.github.io/posts/python_regex/</guid>
      <description>Some Advanced usage on regex get float number: import re target = &amp;#39;total growth is : 8%-8.5%&amp;#39; rate = re.findall(&amp;#39;(\d+(?:\.\d+)?)&amp;#39;, target) print(rate) [&amp;#39;8&amp;#39;, &amp;#39;8.5&amp;#39;] #\d is any int, + is one to many #(?:...) #A non-capturing group allows you to apply quantifiers to part of your regex but does not capture/assign an ID. #so it means: find int or, if int follows a &amp;#34;.&amp;#34; and any int afterwards, combine the int with &amp;#34;.</description>
    </item>
    
  </channel>
</rss>
